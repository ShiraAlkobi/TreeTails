model {
  ssd {
    num_classes: 3  # Adjust to your number of classes

    box_coder {
      faster_rcnn_box_coder {}
    }

    image_resizer {
      fixed_shape_resizer {
        height: 300
        width: 300
      }
    }

    feature_extractor {
      type: "ssd_mobilenet_v2"
    }

    anchor_generator {
      ssd_anchor_generator {
        num_layers: 6
        min_scale: 0.2
        max_scale: 0.95
        aspect_ratios: [1.0, 2.0, 0.5]
      }
    }

   matcher {
  argmax_matcher {
    matched_threshold: 0.5
    unmatched_threshold: 0.5
    negatives_lower_than_unmatched: true
    force_match_for_each_row: true
  }
}


    box_predictor {
      convolutional_box_predictor {
        min_depth: 32
        max_depth: 128
        num_layers_before_predictor: 0
        use_dropout: false
        dropout_keep_probability: 0.8
        kernel_size: 1
        box_code_size: 4
        apply_sigmoid_to_scores: false
      }
    }

    post_processing {
      batch_non_max_suppression {
        score_threshold: 0.5
        iou_threshold: 0.5
        max_detections_per_class: 100
        max_total_detections: 300
      }
      score_converter: SIGMOID
    }

    loss {
      classification_loss {
        weighted_sigmoid_focal {
        }
      }
      localization_loss {
        weighted_smooth_l1 {
        }
      }
      classification_weight: 1.0
      localization_weight: 1.0
    }
  }
}


train_config: {
  batch_size: 24
  fine_tune_checkpoint: "ssd_mobilenet_v2_checkpoint/model.ckpt"  # Path to pre-trained model
  fine_tune_checkpoint_type: "detection"
}

train_input_reader: {
  label_map_path: "SSD/label_map.pbtxt"  # Path to your label map
  tf_record_input_reader {
    input_path: "Data Processing/TFRecords/train.tfrecord"
  }
}

eval_input_reader: {
  label_map_path: "SSD/label_map.pbtxt"
  tf_record_input_reader {
    input_path: "Data Processing/TFRecords/valid.tfrecord"
  }
}
